Terminals unused in grammar

   FOR
   UMINUS


State 42 conflicts: 2 shift/reduce
State 43 conflicts: 2 shift/reduce
State 48 conflicts: 2 shift/reduce
State 64 conflicts: 2 shift/reduce
State 66 conflicts: 2 shift/reduce
State 81 conflicts: 2 shift/reduce
State 85 conflicts: 2 shift/reduce
State 86 conflicts: 2 shift/reduce
State 88 conflicts: 2 shift/reduce
State 94 conflicts: 2 shift/reduce
State 96 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 105 conflicts: 2 shift/reduce
State 106 conflicts: 2 shift/reduce
State 107 conflicts: 2 shift/reduce
State 108 conflicts: 2 shift/reduce
State 109 conflicts: 2 shift/reduce
State 110 conflicts: 3 shift/reduce
State 143 conflicts: 2 shift/reduce
State 151 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions
    2        | error

    3 functions: function functions_spec
    4          | %empty

    5 functions_spec: functions

    6 $@1: %empty

    7 $@2: %empty

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    9 declarations: declaration SEMICOLON declarations_spec
   10             | %empty

   11 declarations_spec: declarations

   12 statements: statement SEMICOLON statements
   13           | %empty

   14 declaration: identifiers COLON INTEGER
   15            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

   16 $@3: %empty

   17 declaration: identifiers COLON ENUM L_PAREN $@3 identifiers R_PAREN

   18 identifiers: ident COMMA identifiers
   19            | ident

   20 statement: svar
   21          | sif
   22          | swhile
   23          | sdo
   24          | sread
   25          | swrite
   26          | scontinue
   27          | sreturn

   28 svar: var ASSIGN expression

   29 $@4: %empty

   30 sif: IF bool_expr THEN $@4 statement SEMICOLON statements elses ENDIF

   31 elses: %empty

   32 $@5: %empty

   33 elses: ELSE $@5 statement SEMICOLON statements

   34 $@6: %empty

   35 swhile: WHILE bool_expr BEGINLOOP $@6 statements ENDLOOP

   36 $@7: %empty

   37 sdo: DO BEGINLOOP $@7 statements ENDLOOP WHILE bool_expr

   38 sread: READ var vars

   39 vars: %empty
   40     | COMMA var vars

   41 swrite: WRITE var vars

   42 scontinue: CONTINUE

   43 sreturn: RETURN expression

   44 bool_expr: relation_and_expr bool_exprs

   45 bool_exprs: OR relation_and_expr bool_exprs
   46           | %empty

   47 relation_and_expr: relation_expr relation_and_exprs

   48 relation_and_exprs: AND relation_expr relation_and_exprs
   49                   | %empty

   50 relation_expr: NOT relation_expr_ending
   51              | relation_expr_ending

   52 relation_expr_ending: expression comp expression
   53                     | TRUE
   54                     | FALSE
   55                     | L_PAREN bool_expr R_PAREN

   56 comp: EQ
   57     | NEQ
   58     | LT
   59     | GT
   60     | LTE
   61     | GTE

   62 expression: mul_exp
   63           | expression ADD mul_exp
   64           | expression SUB mul_exp

   65 mul_exp: term
   66        | mul_exp MULT term
   67        | mul_exp DIV term
   68        | mul_exp MOD term

   69 term: var
   70     | SUB var
   71     | number
   72     | SUB number
   73     | L_PAREN expression R_PAREN
   74     | SUB L_PAREN expression R_PAREN
   75     | ident L_PAREN expressions R_PAREN
   76     | ident L_PAREN R_PAREN

   77 expressions: expressions COMMA expression
   78            | expression

   79 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   80    | ident

   81 ident: IDENT
   82      | %empty

   83 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256) 2
FUNCTION (258) 8
BEGIN_PARAMS (259) 8
END_PARAMS (260) 8
BEGIN_LOCALS (261) 8
END_LOCALS (262) 8
BEGIN_BODY (263) 8
END_BODY (264) 8
INTEGER (265) 14 15
ARRAY (266) 15
ENUM (267) 17
OF (268) 15
IF (269) 30
THEN (270) 30
ENDIF (271) 30
ELSE (272) 33
FOR (273)
WHILE (274) 35 37
DO (275) 37
BEGINLOOP (276) 35 37
ENDLOOP (277) 35 37
CONTINUE (278) 42
READ (279) 38
WRITE (280) 41
TRUE (281) 53
FALSE (282) 54
RETURN (283) 43
SEMICOLON (284) 8 9 12 30 33
COLON (285) 14 15 17
COMMA (286) 18 40 77
ASSIGN (287) 28
OR (288) 45
AND (289) 48
NOT (290) 50
NEQ (291) 57
EQ (292) 56
GTE (293) 61
GT (294) 59
LTE (295) 60
LT (296) 58
ADD (297) 63
SUB (298) 64 70 72 74
MULT (299) 66
DIV (300) 67
MOD (301) 68
UMINUS (302)
L_SQUARE_BRACKET (303) 15 79
R_SQUARE_BRACKET (304) 15 79
L_PAREN (305) 17 55 73 74 75 76
R_PAREN (306) 17 55 73 74 75 76
IDENT (307) 81
NUMBER (308) 83


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0
functions (56)
    on left: 3 4, on right: 1 5
functions_spec (57)
    on left: 5, on right: 3
function (58)
    on left: 8, on right: 3
$@1 (59)
    on left: 6, on right: 8
$@2 (60)
    on left: 7, on right: 8
declarations (61)
    on left: 9 10, on right: 8 11
declarations_spec (62)
    on left: 11, on right: 9
statements (63)
    on left: 12 13, on right: 8 12 30 33 35 37
declaration (64)
    on left: 14 15 17, on right: 9
$@3 (65)
    on left: 16, on right: 17
identifiers (66)
    on left: 18 19, on right: 14 15 17 18
statement (67)
    on left: 20 21 22 23 24 25 26 27, on right: 12 30 33
svar (68)
    on left: 28, on right: 20
sif (69)
    on left: 30, on right: 21
$@4 (70)
    on left: 29, on right: 30
elses (71)
    on left: 31 33, on right: 30
$@5 (72)
    on left: 32, on right: 33
swhile (73)
    on left: 35, on right: 22
$@6 (74)
    on left: 34, on right: 35
sdo (75)
    on left: 37, on right: 23
$@7 (76)
    on left: 36, on right: 37
sread (77)
    on left: 38, on right: 24
vars (78)
    on left: 39 40, on right: 38 40 41
swrite (79)
    on left: 41, on right: 25
scontinue (80)
    on left: 42, on right: 26
sreturn (81)
    on left: 43, on right: 27
bool_expr (82)
    on left: 44, on right: 30 35 37 55
bool_exprs (83)
    on left: 45 46, on right: 44 45
relation_and_expr (84)
    on left: 47, on right: 44 45
relation_and_exprs (85)
    on left: 48 49, on right: 47 48
relation_expr (86)
    on left: 50 51, on right: 47 48
relation_expr_ending (87)
    on left: 52 53 54 55, on right: 50 51
comp (88)
    on left: 56 57 58 59 60 61, on right: 52
expression (89)
    on left: 62 63 64, on right: 28 43 52 63 64 73 74 77 78 79
mul_exp (90)
    on left: 65 66 67 68, on right: 62 63 64 66 67 68
term (91)
    on left: 69 70 71 72 73 74 75 76, on right: 65 66 67 68
expressions (92)
    on left: 77 78, on right: 75 77
var (93)
    on left: 79 80, on right: 28 38 40 41 69 70
ident (94)
    on left: 81 82, on right: 8 18 19 75 76 79 80
number (95)
    on left: 83, on right: 15 71 72


State 0

    0 $accept: . program $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 4 (functions)

    program    go to state 3
    functions  go to state 4
    function   go to state 5


State 1

    2 program: error .

    $default  reduce using rule 2 (program)


State 2

    8 function: FUNCTION . ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 82 (ident)

    ident  go to state 7


State 3

    0 $accept: program . $end

    $end  shift, and go to state 8


State 4

    1 program: functions .

    $default  reduce using rule 1 (program)


State 5

    3 functions: function . functions_spec

    FUNCTION  shift, and go to state 2

    $default  reduce using rule 4 (functions)

    functions       go to state 9
    functions_spec  go to state 10
    function        go to state 5


State 6

   81 ident: IDENT .

    $default  reduce using rule 81 (ident)


State 7

    8 function: FUNCTION ident . $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 ($@1)

    $@1  go to state 11


State 8

    0 $accept: program $end .

    $default  accept


State 9

    5 functions_spec: functions .

    $default  reduce using rule 5 (functions_spec)


State 10

    3 functions: function functions_spec .

    $default  reduce using rule 3 (functions)


State 11

    8 function: FUNCTION ident $@1 . SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 12


State 12

    8 function: FUNCTION ident $@1 SEMICOLON . BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 13


State 13

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS . declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    END_PARAMS  reduce using rule 10 (declarations)
    $default    reduce using rule 82 (ident)

    declarations  go to state 14
    declaration   go to state 15
    identifiers   go to state 16
    ident         go to state 17


State 14

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations . $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 ($@2)

    $@2  go to state 18


State 15

    9 declarations: declaration . SEMICOLON declarations_spec

    SEMICOLON  shift, and go to state 19


State 16

   14 declaration: identifiers . COLON INTEGER
   15            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   17            | identifiers . COLON ENUM L_PAREN $@3 identifiers R_PAREN

    COLON  shift, and go to state 20


State 17

   18 identifiers: ident . COMMA identifiers
   19            | ident .

    COMMA  shift, and go to state 21

    $default  reduce using rule 19 (identifiers)


State 18

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 22


State 19

    9 declarations: declaration SEMICOLON . declarations_spec

    IDENT  shift, and go to state 6

    COLON     reduce using rule 82 (ident)
    COMMA     reduce using rule 82 (ident)
    $default  reduce using rule 10 (declarations)

    declarations       go to state 23
    declarations_spec  go to state 24
    declaration        go to state 15
    identifiers        go to state 16
    ident              go to state 17


State 20

   14 declaration: identifiers COLON . INTEGER
   15            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   17            | identifiers COLON . ENUM L_PAREN $@3 identifiers R_PAREN

    INTEGER  shift, and go to state 25
    ARRAY    shift, and go to state 26
    ENUM     shift, and go to state 27


State 21

   18 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 6

    $default  reduce using rule 82 (ident)

    identifiers  go to state 28
    ident        go to state 17


State 22

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 29


State 23

   11 declarations_spec: declarations .

    $default  reduce using rule 11 (declarations_spec)


State 24

    9 declarations: declaration SEMICOLON declarations_spec .

    $default  reduce using rule 9 (declarations)


State 25

   14 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 14 (declaration)


State 26

   15 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 30


State 27

   17 declaration: identifiers COLON ENUM . L_PAREN $@3 identifiers R_PAREN

    L_PAREN  shift, and go to state 31


State 28

   18 identifiers: ident COMMA identifiers .

    $default  reduce using rule 18 (identifiers)


State 29

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    END_LOCALS  reduce using rule 10 (declarations)
    $default    reduce using rule 82 (ident)

    declarations  go to state 32
    declaration   go to state 15
    identifiers   go to state 16
    ident         go to state 17


State 30

   15 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 33

    number  go to state 34


State 31

   17 declaration: identifiers COLON ENUM L_PAREN . $@3 identifiers R_PAREN

    $default  reduce using rule 16 ($@3)

    $@3  go to state 35


State 32

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 36


State 33

   83 number: NUMBER .

    $default  reduce using rule 83 (number)


State 34

   15 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 37


State 35

   17 declaration: identifiers COLON ENUM L_PAREN $@3 . identifiers R_PAREN

    IDENT  shift, and go to state 6

    $default  reduce using rule 82 (ident)

    identifiers  go to state 38
    ident        go to state 17


State 36

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 39


State 37

   15 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 40


State 38

   17 declaration: identifiers COLON ENUM L_PAREN $@3 identifiers . R_PAREN

    R_PAREN  shift, and go to state 41


State 39

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 42
    WHILE     shift, and go to state 43
    DO        shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 6

    END_BODY  reduce using rule 13 (statements)
    $default  reduce using rule 82 (ident)

    statements  go to state 49
    statement   go to state 50
    svar        go to state 51
    sif         go to state 52
    swhile      go to state 53
    sdo         go to state 54
    sread       go to state 55
    swrite      go to state 56
    scontinue   go to state 57
    sreturn     go to state 58
    var         go to state 59
    ident       go to state 60


State 40

   15 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 61


State 41

   17 declaration: identifiers COLON ENUM L_PAREN $@3 identifiers R_PAREN .

    $default  reduce using rule 17 (declaration)


State 42

   30 sif: IF . bool_expr THEN $@4 statement SEMICOLON statements elses ENDIF

    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    NOT      shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    bool_expr             go to state 67
    relation_and_expr     go to state 68
    relation_expr         go to state 69
    relation_expr_ending  go to state 70
    expression            go to state 71
    mul_exp               go to state 72
    term                  go to state 73
    var                   go to state 74
    ident                 go to state 75
    number                go to state 76


State 43

   35 swhile: WHILE . bool_expr BEGINLOOP $@6 statements ENDLOOP

    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    NOT      shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    bool_expr             go to state 77
    relation_and_expr     go to state 68
    relation_expr         go to state 69
    relation_expr_ending  go to state 70
    expression            go to state 71
    mul_exp               go to state 72
    term                  go to state 73
    var                   go to state 74
    ident                 go to state 75
    number                go to state 76


State 44

   37 sdo: DO . BEGINLOOP $@7 statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 78


State 45

   42 scontinue: CONTINUE .

    $default  reduce using rule 42 (scontinue)


State 46

   38 sread: READ . var vars

    IDENT  shift, and go to state 6

    $default  reduce using rule 82 (ident)

    var    go to state 79
    ident  go to state 60


State 47

   41 swrite: WRITE . var vars

    IDENT  shift, and go to state 6

    $default  reduce using rule 82 (ident)

    var    go to state 80
    ident  go to state 60


State 48

   43 sreturn: RETURN . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    expression  go to state 82
    mul_exp     go to state 72
    term        go to state 73
    var         go to state 74
    ident       go to state 75
    number      go to state 76


State 49

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 83


State 50

   12 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 84


State 51

   20 statement: svar .

    $default  reduce using rule 20 (statement)


State 52

   21 statement: sif .

    $default  reduce using rule 21 (statement)


State 53

   22 statement: swhile .

    $default  reduce using rule 22 (statement)


State 54

   23 statement: sdo .

    $default  reduce using rule 23 (statement)


State 55

   24 statement: sread .

    $default  reduce using rule 24 (statement)


State 56

   25 statement: swrite .

    $default  reduce using rule 25 (statement)


State 57

   26 statement: scontinue .

    $default  reduce using rule 26 (statement)


State 58

   27 statement: sreturn .

    $default  reduce using rule 27 (statement)


State 59

   28 svar: var . ASSIGN expression

    ASSIGN  shift, and go to state 85


State 60

   79 var: ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   80    | ident .

    L_SQUARE_BRACKET  shift, and go to state 86

    $default  reduce using rule 80 (var)


State 61

   15 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 15 (declaration)


State 62

   53 relation_expr_ending: TRUE .

    $default  reduce using rule 53 (relation_expr_ending)


State 63

   54 relation_expr_ending: FALSE .

    $default  reduce using rule 54 (relation_expr_ending)


State 64

   50 relation_expr: NOT . relation_expr_ending

    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    relation_expr_ending  go to state 87
    expression            go to state 71
    mul_exp               go to state 72
    term                  go to state 73
    var                   go to state 74
    ident                 go to state 75
    number                go to state 76


State 65

   70 term: SUB . var
   72     | SUB . number
   74     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 88
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    $default  reduce using rule 82 (ident)

    var     go to state 89
    ident   go to state 60
    number  go to state 90


State 66

   55 relation_expr_ending: L_PAREN . bool_expr R_PAREN
   73 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    NOT      shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    bool_expr             go to state 91
    relation_and_expr     go to state 68
    relation_expr         go to state 69
    relation_expr_ending  go to state 70
    expression            go to state 92
    mul_exp               go to state 72
    term                  go to state 73
    var                   go to state 74
    ident                 go to state 75
    number                go to state 76


State 67

   30 sif: IF bool_expr . THEN $@4 statement SEMICOLON statements elses ENDIF

    THEN  shift, and go to state 93


State 68

   44 bool_expr: relation_and_expr . bool_exprs

    OR  shift, and go to state 94

    $default  reduce using rule 46 (bool_exprs)

    bool_exprs  go to state 95


State 69

   47 relation_and_expr: relation_expr . relation_and_exprs

    AND  shift, and go to state 96

    $default  reduce using rule 49 (relation_and_exprs)

    relation_and_exprs  go to state 97


State 70

   51 relation_expr: relation_expr_ending .

    $default  reduce using rule 51 (relation_expr)


State 71

   52 relation_expr_ending: expression . comp expression
   63 expression: expression . ADD mul_exp
   64           | expression . SUB mul_exp

    NEQ  shift, and go to state 98
    EQ   shift, and go to state 99
    GTE  shift, and go to state 100
    GT   shift, and go to state 101
    LTE  shift, and go to state 102
    LT   shift, and go to state 103
    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    comp  go to state 106


State 72

   62 expression: mul_exp .
   66 mul_exp: mul_exp . MULT term
   67        | mul_exp . DIV term
   68        | mul_exp . MOD term

    MULT  shift, and go to state 107
    DIV   shift, and go to state 108
    MOD   shift, and go to state 109

    $default  reduce using rule 62 (expression)


State 73

   65 mul_exp: term .

    $default  reduce using rule 65 (mul_exp)


State 74

   69 term: var .

    $default  reduce using rule 69 (term)


State 75

   75 term: ident . L_PAREN expressions R_PAREN
   76     | ident . L_PAREN R_PAREN
   79 var: ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   80    | ident .

    L_SQUARE_BRACKET  shift, and go to state 86
    L_PAREN           shift, and go to state 110

    $default  reduce using rule 80 (var)


State 76

   71 term: number .

    $default  reduce using rule 71 (term)


State 77

   35 swhile: WHILE bool_expr . BEGINLOOP $@6 statements ENDLOOP

    BEGINLOOP  shift, and go to state 111


State 78

   37 sdo: DO BEGINLOOP . $@7 statements ENDLOOP WHILE bool_expr

    $default  reduce using rule 36 ($@7)

    $@7  go to state 112


State 79

   38 sread: READ var . vars

    COMMA  shift, and go to state 113

    $default  reduce using rule 39 (vars)

    vars  go to state 114


State 80

   41 swrite: WRITE var . vars

    COMMA  shift, and go to state 113

    $default  reduce using rule 39 (vars)

    vars  go to state 115


State 81

   73 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    expression  go to state 116
    mul_exp     go to state 72
    term        go to state 73
    var         go to state 74
    ident       go to state 75
    number      go to state 76


State 82

   43 sreturn: RETURN expression .
   63 expression: expression . ADD mul_exp
   64           | expression . SUB mul_exp

    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    $default  reduce using rule 43 (sreturn)


State 83

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 8 (function)


State 84

   12 statements: statement SEMICOLON . statements

    IF        shift, and go to state 42
    WHILE     shift, and go to state 43
    DO        shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 6

    ASSIGN            reduce using rule 82 (ident)
    L_SQUARE_BRACKET  reduce using rule 82 (ident)
    $default          reduce using rule 13 (statements)

    statements  go to state 117
    statement   go to state 50
    svar        go to state 51
    sif         go to state 52
    swhile      go to state 53
    sdo         go to state 54
    sread       go to state 55
    swrite      go to state 56
    scontinue   go to state 57
    sreturn     go to state 58
    var         go to state 59
    ident       go to state 60


State 85

   28 svar: var ASSIGN . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    expression  go to state 118
    mul_exp     go to state 72
    term        go to state 73
    var         go to state 74
    ident       go to state 75
    number      go to state 76


State 86

   79 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    expression  go to state 119
    mul_exp     go to state 72
    term        go to state 73
    var         go to state 74
    ident       go to state 75
    number      go to state 76


State 87

   50 relation_expr: NOT relation_expr_ending .

    $default  reduce using rule 50 (relation_expr)


State 88

   74 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    expression  go to state 120
    mul_exp     go to state 72
    term        go to state 73
    var         go to state 74
    ident       go to state 75
    number      go to state 76


State 89

   70 term: SUB var .

    $default  reduce using rule 70 (term)


State 90

   72 term: SUB number .

    $default  reduce using rule 72 (term)


State 91

   55 relation_expr_ending: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 121


State 92

   52 relation_expr_ending: expression . comp expression
   63 expression: expression . ADD mul_exp
   64           | expression . SUB mul_exp
   73 term: L_PAREN expression . R_PAREN

    NEQ      shift, and go to state 98
    EQ       shift, and go to state 99
    GTE      shift, and go to state 100
    GT       shift, and go to state 101
    LTE      shift, and go to state 102
    LT       shift, and go to state 103
    ADD      shift, and go to state 104
    SUB      shift, and go to state 105
    R_PAREN  shift, and go to state 122

    comp  go to state 106


State 93

   30 sif: IF bool_expr THEN . $@4 statement SEMICOLON statements elses ENDIF

    $default  reduce using rule 29 ($@4)

    $@4  go to state 123


State 94

   45 bool_exprs: OR . relation_and_expr bool_exprs

    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    NOT      shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    relation_and_expr     go to state 124
    relation_expr         go to state 69
    relation_expr_ending  go to state 70
    expression            go to state 71
    mul_exp               go to state 72
    term                  go to state 73
    var                   go to state 74
    ident                 go to state 75
    number                go to state 76


State 95

   44 bool_expr: relation_and_expr bool_exprs .

    $default  reduce using rule 44 (bool_expr)


State 96

   48 relation_and_exprs: AND . relation_expr relation_and_exprs

    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    NOT      shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    relation_expr         go to state 125
    relation_expr_ending  go to state 70
    expression            go to state 71
    mul_exp               go to state 72
    term                  go to state 73
    var                   go to state 74
    ident                 go to state 75
    number                go to state 76


State 97

   47 relation_and_expr: relation_expr relation_and_exprs .

    $default  reduce using rule 47 (relation_and_expr)


State 98

   57 comp: NEQ .

    $default  reduce using rule 57 (comp)


State 99

   56 comp: EQ .

    $default  reduce using rule 56 (comp)


State 100

   61 comp: GTE .

    $default  reduce using rule 61 (comp)


State 101

   59 comp: GT .

    $default  reduce using rule 59 (comp)


State 102

   60 comp: LTE .

    $default  reduce using rule 60 (comp)


State 103

   58 comp: LT .

    $default  reduce using rule 58 (comp)


State 104

   63 expression: expression ADD . mul_exp

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    mul_exp  go to state 126
    term     go to state 73
    var      go to state 74
    ident    go to state 75
    number   go to state 76


State 105

   64 expression: expression SUB . mul_exp

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    mul_exp  go to state 127
    term     go to state 73
    var      go to state 74
    ident    go to state 75
    number   go to state 76


State 106

   52 relation_expr_ending: expression comp . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    expression  go to state 128
    mul_exp     go to state 72
    term        go to state 73
    var         go to state 74
    ident       go to state 75
    number      go to state 76


State 107

   66 mul_exp: mul_exp MULT . term

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    term    go to state 129
    var     go to state 74
    ident   go to state 75
    number  go to state 76


State 108

   67 mul_exp: mul_exp DIV . term

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    term    go to state 130
    var     go to state 74
    ident   go to state 75
    number  go to state 76


State 109

   68 mul_exp: mul_exp MOD . term

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    term    go to state 131
    var     go to state 74
    ident   go to state 75
    number  go to state 76


State 110

   75 term: ident L_PAREN . expressions R_PAREN
   76     | ident L_PAREN . R_PAREN

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    R_PAREN  shift, and go to state 132
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    R_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    expression   go to state 133
    mul_exp      go to state 72
    term         go to state 73
    expressions  go to state 134
    var          go to state 74
    ident        go to state 75
    number       go to state 76


State 111

   35 swhile: WHILE bool_expr BEGINLOOP . $@6 statements ENDLOOP

    $default  reduce using rule 34 ($@6)

    $@6  go to state 135


State 112

   37 sdo: DO BEGINLOOP $@7 . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 42
    WHILE     shift, and go to state 43
    DO        shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 6

    ENDLOOP   reduce using rule 13 (statements)
    $default  reduce using rule 82 (ident)

    statements  go to state 136
    statement   go to state 50
    svar        go to state 51
    sif         go to state 52
    swhile      go to state 53
    sdo         go to state 54
    sread       go to state 55
    swrite      go to state 56
    scontinue   go to state 57
    sreturn     go to state 58
    var         go to state 59
    ident       go to state 60


State 113

   40 vars: COMMA . var vars

    IDENT  shift, and go to state 6

    $default  reduce using rule 82 (ident)

    var    go to state 137
    ident  go to state 60


State 114

   38 sread: READ var vars .

    $default  reduce using rule 38 (sread)


State 115

   41 swrite: WRITE var vars .

    $default  reduce using rule 41 (swrite)


State 116

   63 expression: expression . ADD mul_exp
   64           | expression . SUB mul_exp
   73 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 104
    SUB      shift, and go to state 105
    R_PAREN  shift, and go to state 122


State 117

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 118

   28 svar: var ASSIGN expression .
   63 expression: expression . ADD mul_exp
   64           | expression . SUB mul_exp

    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    $default  reduce using rule 28 (svar)


State 119

   63 expression: expression . ADD mul_exp
   64           | expression . SUB mul_exp
   79 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    ADD               shift, and go to state 104
    SUB               shift, and go to state 105
    R_SQUARE_BRACKET  shift, and go to state 138


State 120

   63 expression: expression . ADD mul_exp
   64           | expression . SUB mul_exp
   74 term: SUB L_PAREN expression . R_PAREN

    ADD      shift, and go to state 104
    SUB      shift, and go to state 105
    R_PAREN  shift, and go to state 139


State 121

   55 relation_expr_ending: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 55 (relation_expr_ending)


State 122

   73 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 73 (term)


State 123

   30 sif: IF bool_expr THEN $@4 . statement SEMICOLON statements elses ENDIF

    IF        shift, and go to state 42
    WHILE     shift, and go to state 43
    DO        shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 6

    $default  reduce using rule 82 (ident)

    statement  go to state 140
    svar       go to state 51
    sif        go to state 52
    swhile     go to state 53
    sdo        go to state 54
    sread      go to state 55
    swrite     go to state 56
    scontinue  go to state 57
    sreturn    go to state 58
    var        go to state 59
    ident      go to state 60


State 124

   45 bool_exprs: OR relation_and_expr . bool_exprs

    OR  shift, and go to state 94

    $default  reduce using rule 46 (bool_exprs)

    bool_exprs  go to state 141


State 125

   48 relation_and_exprs: AND relation_expr . relation_and_exprs

    AND  shift, and go to state 96

    $default  reduce using rule 49 (relation_and_exprs)

    relation_and_exprs  go to state 142


State 126

   63 expression: expression ADD mul_exp .
   66 mul_exp: mul_exp . MULT term
   67        | mul_exp . DIV term
   68        | mul_exp . MOD term

    MULT  shift, and go to state 107
    DIV   shift, and go to state 108
    MOD   shift, and go to state 109

    $default  reduce using rule 63 (expression)


State 127

   64 expression: expression SUB mul_exp .
   66 mul_exp: mul_exp . MULT term
   67        | mul_exp . DIV term
   68        | mul_exp . MOD term

    MULT  shift, and go to state 107
    DIV   shift, and go to state 108
    MOD   shift, and go to state 109

    $default  reduce using rule 64 (expression)


State 128

   52 relation_expr_ending: expression comp expression .
   63 expression: expression . ADD mul_exp
   64           | expression . SUB mul_exp

    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    $default  reduce using rule 52 (relation_expr_ending)


State 129

   66 mul_exp: mul_exp MULT term .

    $default  reduce using rule 66 (mul_exp)


State 130

   67 mul_exp: mul_exp DIV term .

    $default  reduce using rule 67 (mul_exp)


State 131

   68 mul_exp: mul_exp MOD term .

    $default  reduce using rule 68 (mul_exp)


State 132

   76 term: ident L_PAREN R_PAREN .

    $default  reduce using rule 76 (term)


State 133

   63 expression: expression . ADD mul_exp
   64           | expression . SUB mul_exp
   78 expressions: expression .

    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    $default  reduce using rule 78 (expressions)


State 134

   75 term: ident L_PAREN expressions . R_PAREN
   77 expressions: expressions . COMMA expression

    COMMA    shift, and go to state 143
    R_PAREN  shift, and go to state 144


State 135

   35 swhile: WHILE bool_expr BEGINLOOP $@6 . statements ENDLOOP

    IF        shift, and go to state 42
    WHILE     shift, and go to state 43
    DO        shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 6

    ENDLOOP   reduce using rule 13 (statements)
    $default  reduce using rule 82 (ident)

    statements  go to state 145
    statement   go to state 50
    svar        go to state 51
    sif         go to state 52
    swhile      go to state 53
    sdo         go to state 54
    sread       go to state 55
    swrite      go to state 56
    scontinue   go to state 57
    sreturn     go to state 58
    var         go to state 59
    ident       go to state 60


State 136

   37 sdo: DO BEGINLOOP $@7 statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 146


State 137

   40 vars: COMMA var . vars

    COMMA  shift, and go to state 113

    $default  reduce using rule 39 (vars)

    vars  go to state 147


State 138

   79 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 79 (var)


State 139

   74 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 74 (term)


State 140

   30 sif: IF bool_expr THEN $@4 statement . SEMICOLON statements elses ENDIF

    SEMICOLON  shift, and go to state 148


State 141

   45 bool_exprs: OR relation_and_expr bool_exprs .

    $default  reduce using rule 45 (bool_exprs)


State 142

   48 relation_and_exprs: AND relation_expr relation_and_exprs .

    $default  reduce using rule 48 (relation_and_exprs)


State 143

   77 expressions: expressions COMMA . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    expression  go to state 149
    mul_exp     go to state 72
    term        go to state 73
    var         go to state 74
    ident       go to state 75
    number      go to state 76


State 144

   75 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 75 (term)


State 145

   35 swhile: WHILE bool_expr BEGINLOOP $@6 statements . ENDLOOP

    ENDLOOP  shift, and go to state 150


State 146

   37 sdo: DO BEGINLOOP $@7 statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 151


State 147

   40 vars: COMMA var vars .

    $default  reduce using rule 40 (vars)


State 148

   30 sif: IF bool_expr THEN $@4 statement SEMICOLON . statements elses ENDIF

    IF        shift, and go to state 42
    WHILE     shift, and go to state 43
    DO        shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 6

    ASSIGN            reduce using rule 82 (ident)
    L_SQUARE_BRACKET  reduce using rule 82 (ident)
    $default          reduce using rule 13 (statements)

    statements  go to state 152
    statement   go to state 50
    svar        go to state 51
    sif         go to state 52
    swhile      go to state 53
    sdo         go to state 54
    sread       go to state 55
    swrite      go to state 56
    scontinue   go to state 57
    sreturn     go to state 58
    var         go to state 59
    ident       go to state 60


State 149

   63 expression: expression . ADD mul_exp
   64           | expression . SUB mul_exp
   77 expressions: expressions COMMA expression .

    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    $default  reduce using rule 77 (expressions)


State 150

   35 swhile: WHILE bool_expr BEGINLOOP $@6 statements ENDLOOP .

    $default  reduce using rule 35 (swhile)


State 151

   37 sdo: DO BEGINLOOP $@7 statements ENDLOOP WHILE . bool_expr

    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    NOT      shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 82 (ident)]
    L_PAREN   [reduce using rule 82 (ident)]
    $default  reduce using rule 82 (ident)

    bool_expr             go to state 153
    relation_and_expr     go to state 68
    relation_expr         go to state 69
    relation_expr_ending  go to state 70
    expression            go to state 71
    mul_exp               go to state 72
    term                  go to state 73
    var                   go to state 74
    ident                 go to state 75
    number                go to state 76


State 152

   30 sif: IF bool_expr THEN $@4 statement SEMICOLON statements . elses ENDIF

    ELSE  shift, and go to state 154

    $default  reduce using rule 31 (elses)

    elses  go to state 155


State 153

   37 sdo: DO BEGINLOOP $@7 statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 37 (sdo)


State 154

   33 elses: ELSE . $@5 statement SEMICOLON statements

    $default  reduce using rule 32 ($@5)

    $@5  go to state 156


State 155

   30 sif: IF bool_expr THEN $@4 statement SEMICOLON statements elses . ENDIF

    ENDIF  shift, and go to state 157


State 156

   33 elses: ELSE $@5 . statement SEMICOLON statements

    IF        shift, and go to state 42
    WHILE     shift, and go to state 43
    DO        shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 6

    $default  reduce using rule 82 (ident)

    statement  go to state 158
    svar       go to state 51
    sif        go to state 52
    swhile     go to state 53
    sdo        go to state 54
    sread      go to state 55
    swrite     go to state 56
    scontinue  go to state 57
    sreturn    go to state 58
    var        go to state 59
    ident      go to state 60


State 157

   30 sif: IF bool_expr THEN $@4 statement SEMICOLON statements elses ENDIF .

    $default  reduce using rule 30 (sif)


State 158

   33 elses: ELSE $@5 statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 159


State 159

   33 elses: ELSE $@5 statement SEMICOLON . statements

    IF        shift, and go to state 42
    WHILE     shift, and go to state 43
    DO        shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 6

    ENDIF     reduce using rule 13 (statements)
    $default  reduce using rule 82 (ident)

    statements  go to state 160
    statement   go to state 50
    svar        go to state 51
    sif         go to state 52
    swhile      go to state 53
    sdo         go to state 54
    sread       go to state 55
    swrite      go to state 56
    scontinue   go to state 57
    sreturn     go to state 58
    var         go to state 59
    ident       go to state 60


State 160

   33 elses: ELSE $@5 statement SEMICOLON statements .

    $default  reduce using rule 33 (elses)
