Terminals unused in grammar

   FOR
   UMINUS


Rules useless in parser due to conflicts

   31 $@4: %empty


State 82 conflicts: 8 reduce/reduce
State 89 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions
    2        | error

    3 functions: function functions_spec
    4          | %empty

    5 functions_spec: functions

    6 $@1: %empty

    7 $@2: %empty

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    9 declarations: declaration SEMICOLON declarations_spec
   10             | %empty

   11 declarations_spec: declarations

   12 statements: statement SEMICOLON statementsEnding

   13 statementsEnding: statements
   14                 | %empty

   15 declaration: identifiers COLON INTEGER
   16            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   17            | identifiers COLON ENUM L_PAREN identifiers R_PAREN

   18 identifiers: ident COMMA identifiers
   19            | ident

   20 statement: svar
   21          | sif
   22          | swhile
   23          | sdo
   24          | sread
   25          | swrite
   26          | scontinue
   27          | sreturn

   28 svar: var ASSIGN expression

   29 $@3: %empty

   30 sif: IF bool_expr THEN $@3 statements ENDIF

   31 $@4: %empty

   32 $@5: %empty

   33 sif: IF bool_expr THEN $@4 statements ELSE $@5 statements ENDIF

   34 $@6: %empty

   35 swhile: WHILE bool_expr BEGINLOOP $@6 statements ENDLOOP

   36 $@7: %empty

   37 sdo: DO BEGINLOOP $@7 statements ENDLOOP WHILE bool_expr

   38 sread: READ var vars

   39 vars: %empty
   40     | COMMA var vars

   41 swrite: WRITE var vars

   42 scontinue: CONTINUE

   43 sreturn: RETURN expression

   44 bool_expr: relation_and_expr bool_exprs

   45 bool_exprs: OR relation_and_expr bool_exprs
   46           | %empty

   47 relation_and_expr: relation_expr relation_and_exprs

   48 relation_and_exprs: AND relation_expr relation_and_exprs
   49                   | %empty

   50 relation_expr: nots relation_expr_ending

   51 relation_expr_ending: expression comp expression
   52                     | TRUE
   53                     | FALSE
   54                     | L_PAREN bool_expr R_PAREN

   55 nots: NOT
   56     | %empty

   57 comp: EQ
   58     | NEQ
   59     | LT
   60     | GT
   61     | LTE
   62     | GTE

   63 expression: mul_exp
   64           | expression ADD mul_exp
   65           | expression SUB mul_exp

   66 mul_exp: term
   67        | mul_exp MULT term
   68        | mul_exp DIV term
   69        | mul_exp MOD term

   70 term: var
   71     | SUB var
   72     | number
   73     | SUB number
   74     | L_PAREN expression R_PAREN
   75     | SUB L_PAREN expression R_PAREN
   76     | ident L_PAREN expressions R_PAREN
   77     | ident L_PAREN R_PAREN

   78 expressions: expressions COMMA expression
   79            | expression

   80 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   81    | ident

   82 ident: IDENT

   83 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256) 2
FUNCTION (258) 8
BEGIN_PARAMS (259) 8
END_PARAMS (260) 8
BEGIN_LOCALS (261) 8
END_LOCALS (262) 8
BEGIN_BODY (263) 8
END_BODY (264) 8
INTEGER (265) 15 16
ARRAY (266) 16
ENUM (267) 17
OF (268) 16
IF (269) 30 33
THEN (270) 30 33
ENDIF (271) 30 33
ELSE (272) 33
FOR (273)
WHILE (274) 35 37
DO (275) 37
BEGINLOOP (276) 35 37
ENDLOOP (277) 35 37
CONTINUE (278) 42
READ (279) 38
WRITE (280) 41
TRUE (281) 52
FALSE (282) 53
RETURN (283) 43
SEMICOLON (284) 8 9 12
COLON (285) 15 16 17
COMMA (286) 18 40 78
ASSIGN (287) 28
OR (288) 45
AND (289) 48
NOT (290) 55
NEQ (291) 58
EQ (292) 57
GTE (293) 62
GT (294) 60
LTE (295) 61
LT (296) 59
ADD (297) 64
SUB (298) 65 71 73 75
MULT (299) 67
DIV (300) 68
MOD (301) 69
UMINUS (302)
L_SQUARE_BRACKET (303) 16 80
R_SQUARE_BRACKET (304) 16 80
L_PAREN (305) 17 54 74 75 76 77
R_PAREN (306) 17 54 74 75 76 77
IDENT (307) 82
NUMBER (308) 83


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0
functions (56)
    on left: 3 4, on right: 1 5
functions_spec (57)
    on left: 5, on right: 3
function (58)
    on left: 8, on right: 3
$@1 (59)
    on left: 6, on right: 8
$@2 (60)
    on left: 7, on right: 8
declarations (61)
    on left: 9 10, on right: 8 11
declarations_spec (62)
    on left: 11, on right: 9
statements (63)
    on left: 12, on right: 8 13 30 33 35 37
statementsEnding (64)
    on left: 13 14, on right: 12
declaration (65)
    on left: 15 16 17, on right: 9
identifiers (66)
    on left: 18 19, on right: 15 16 17 18
statement (67)
    on left: 20 21 22 23 24 25 26 27, on right: 12
svar (68)
    on left: 28, on right: 20
sif (69)
    on left: 30 33, on right: 21
$@3 (70)
    on left: 29, on right: 30
$@4 (71)
    on left: 31, on right: 33
$@5 (72)
    on left: 32, on right: 33
swhile (73)
    on left: 35, on right: 22
$@6 (74)
    on left: 34, on right: 35
sdo (75)
    on left: 37, on right: 23
$@7 (76)
    on left: 36, on right: 37
sread (77)
    on left: 38, on right: 24
vars (78)
    on left: 39 40, on right: 38 40 41
swrite (79)
    on left: 41, on right: 25
scontinue (80)
    on left: 42, on right: 26
sreturn (81)
    on left: 43, on right: 27
bool_expr (82)
    on left: 44, on right: 30 33 35 37 54
bool_exprs (83)
    on left: 45 46, on right: 44 45
relation_and_expr (84)
    on left: 47, on right: 44 45
relation_and_exprs (85)
    on left: 48 49, on right: 47 48
relation_expr (86)
    on left: 50, on right: 47 48
relation_expr_ending (87)
    on left: 51 52 53 54, on right: 50
nots (88)
    on left: 55 56, on right: 50
comp (89)
    on left: 57 58 59 60 61 62, on right: 51
expression (90)
    on left: 63 64 65, on right: 28 43 51 64 65 74 75 78 79 80
mul_exp (91)
    on left: 66 67 68 69, on right: 63 64 65 67 68 69
term (92)
    on left: 70 71 72 73 74 75 76 77, on right: 66 67 68 69
expressions (93)
    on left: 78 79, on right: 76 78
var (94)
    on left: 80 81, on right: 28 38 40 41 70 71
ident (95)
    on left: 82, on right: 8 18 19 76 77 80 81
number (96)
    on left: 83, on right: 16 72 73


State 0

    0 $accept: . program $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 4 (functions)

    program    go to state 3
    functions  go to state 4
    function   go to state 5


State 1

    2 program: error .

    $default  reduce using rule 2 (program)


State 2

    8 function: FUNCTION . ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    ident  go to state 7


State 3

    0 $accept: program . $end

    $end  shift, and go to state 8


State 4

    1 program: functions .

    $default  reduce using rule 1 (program)


State 5

    3 functions: function . functions_spec

    FUNCTION  shift, and go to state 2

    $default  reduce using rule 4 (functions)

    functions       go to state 9
    functions_spec  go to state 10
    function        go to state 5


State 6

   82 ident: IDENT .

    $default  reduce using rule 82 (ident)


State 7

    8 function: FUNCTION ident . $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 ($@1)

    $@1  go to state 11


State 8

    0 $accept: program $end .

    $default  accept


State 9

    5 functions_spec: functions .

    $default  reduce using rule 5 (functions_spec)


State 10

    3 functions: function functions_spec .

    $default  reduce using rule 3 (functions)


State 11

    8 function: FUNCTION ident $@1 . SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 12


State 12

    8 function: FUNCTION ident $@1 SEMICOLON . BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 13


State 13

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS . declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations)

    declarations  go to state 14
    declaration   go to state 15
    identifiers   go to state 16
    ident         go to state 17


State 14

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations . $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 ($@2)

    $@2  go to state 18


State 15

    9 declarations: declaration . SEMICOLON declarations_spec

    SEMICOLON  shift, and go to state 19


State 16

   15 declaration: identifiers . COLON INTEGER
   16            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   17            | identifiers . COLON ENUM L_PAREN identifiers R_PAREN

    COLON  shift, and go to state 20


State 17

   18 identifiers: ident . COMMA identifiers
   19            | ident .

    COMMA  shift, and go to state 21

    $default  reduce using rule 19 (identifiers)


State 18

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 22


State 19

    9 declarations: declaration SEMICOLON . declarations_spec

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations)

    declarations       go to state 23
    declarations_spec  go to state 24
    declaration        go to state 15
    identifiers        go to state 16
    ident              go to state 17


State 20

   15 declaration: identifiers COLON . INTEGER
   16            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   17            | identifiers COLON . ENUM L_PAREN identifiers R_PAREN

    INTEGER  shift, and go to state 25
    ARRAY    shift, and go to state 26
    ENUM     shift, and go to state 27


State 21

   18 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 6

    identifiers  go to state 28
    ident        go to state 17


State 22

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 29


State 23

   11 declarations_spec: declarations .

    $default  reduce using rule 11 (declarations_spec)


State 24

    9 declarations: declaration SEMICOLON declarations_spec .

    $default  reduce using rule 9 (declarations)


State 25

   15 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 15 (declaration)


State 26

   16 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 30


State 27

   17 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 31


State 28

   18 identifiers: ident COMMA identifiers .

    $default  reduce using rule 18 (identifiers)


State 29

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations)

    declarations  go to state 32
    declaration   go to state 15
    identifiers   go to state 16
    ident         go to state 17


State 30

   16 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 33

    number  go to state 34


State 31

   17 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    IDENT  shift, and go to state 6

    identifiers  go to state 35
    ident        go to state 17


State 32

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 36


State 33

   83 number: NUMBER .

    $default  reduce using rule 83 (number)


State 34

   16 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 37


State 35

   17 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 38


State 36

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 39


State 37

   16 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 40


State 38

   17 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 17 (declaration)


State 39

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 6

    statements  go to state 48
    statement   go to state 49
    svar        go to state 50
    sif         go to state 51
    swhile      go to state 52
    sdo         go to state 53
    sread       go to state 54
    swrite      go to state 55
    scontinue   go to state 56
    sreturn     go to state 57
    var         go to state 58
    ident       go to state 59


State 40

   16 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 60


State 41

   30 sif: IF . bool_expr THEN $@3 statements ENDIF
   33    | IF . bool_expr THEN $@4 statements ELSE $@5 statements ENDIF

    NOT  shift, and go to state 61

    $default  reduce using rule 56 (nots)

    bool_expr          go to state 62
    relation_and_expr  go to state 63
    relation_expr      go to state 64
    nots               go to state 65


State 42

   35 swhile: WHILE . bool_expr BEGINLOOP $@6 statements ENDLOOP

    NOT  shift, and go to state 61

    $default  reduce using rule 56 (nots)

    bool_expr          go to state 66
    relation_and_expr  go to state 63
    relation_expr      go to state 64
    nots               go to state 65


State 43

   37 sdo: DO . BEGINLOOP $@7 statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 67


State 44

   42 scontinue: CONTINUE .

    $default  reduce using rule 42 (scontinue)


State 45

   38 sread: READ . var vars

    IDENT  shift, and go to state 6

    var    go to state 68
    ident  go to state 59


State 46

   41 swrite: WRITE . var vars

    IDENT  shift, and go to state 6

    var    go to state 69
    ident  go to state 59


State 47

   43 sreturn: RETURN . expression

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    expression  go to state 72
    mul_exp     go to state 73
    term        go to state 74
    var         go to state 75
    ident       go to state 76
    number      go to state 77


State 48

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 78


State 49

   12 statements: statement . SEMICOLON statementsEnding

    SEMICOLON  shift, and go to state 79


State 50

   20 statement: svar .

    $default  reduce using rule 20 (statement)


State 51

   21 statement: sif .

    $default  reduce using rule 21 (statement)


State 52

   22 statement: swhile .

    $default  reduce using rule 22 (statement)


State 53

   23 statement: sdo .

    $default  reduce using rule 23 (statement)


State 54

   24 statement: sread .

    $default  reduce using rule 24 (statement)


State 55

   25 statement: swrite .

    $default  reduce using rule 25 (statement)


State 56

   26 statement: scontinue .

    $default  reduce using rule 26 (statement)


State 57

   27 statement: sreturn .

    $default  reduce using rule 27 (statement)


State 58

   28 svar: var . ASSIGN expression

    ASSIGN  shift, and go to state 80


State 59

   80 var: ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   81    | ident .

    L_SQUARE_BRACKET  shift, and go to state 81

    $default  reduce using rule 81 (var)


State 60

   16 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 16 (declaration)


State 61

   55 nots: NOT .

    $default  reduce using rule 55 (nots)


State 62

   30 sif: IF bool_expr . THEN $@3 statements ENDIF
   33    | IF bool_expr . THEN $@4 statements ELSE $@5 statements ENDIF

    THEN  shift, and go to state 82


State 63

   44 bool_expr: relation_and_expr . bool_exprs

    OR  shift, and go to state 83

    $default  reduce using rule 46 (bool_exprs)

    bool_exprs  go to state 84


State 64

   47 relation_and_expr: relation_expr . relation_and_exprs

    AND  shift, and go to state 85

    $default  reduce using rule 49 (relation_and_exprs)

    relation_and_exprs  go to state 86


State 65

   50 relation_expr: nots . relation_expr_ending

    TRUE     shift, and go to state 87
    FALSE    shift, and go to state 88
    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 89
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    relation_expr_ending  go to state 90
    expression            go to state 91
    mul_exp               go to state 73
    term                  go to state 74
    var                   go to state 75
    ident                 go to state 76
    number                go to state 77


State 66

   35 swhile: WHILE bool_expr . BEGINLOOP $@6 statements ENDLOOP

    BEGINLOOP  shift, and go to state 92


State 67

   37 sdo: DO BEGINLOOP . $@7 statements ENDLOOP WHILE bool_expr

    $default  reduce using rule 36 ($@7)

    $@7  go to state 93


State 68

   38 sread: READ var . vars

    COMMA  shift, and go to state 94

    $default  reduce using rule 39 (vars)

    vars  go to state 95


State 69

   41 swrite: WRITE var . vars

    COMMA  shift, and go to state 94

    $default  reduce using rule 39 (vars)

    vars  go to state 96


State 70

   71 term: SUB . var
   73     | SUB . number
   75     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 97
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    var     go to state 98
    ident   go to state 59
    number  go to state 99


State 71

   74 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    expression  go to state 100
    mul_exp     go to state 73
    term        go to state 74
    var         go to state 75
    ident       go to state 76
    number      go to state 77


State 72

   43 sreturn: RETURN expression .
   64 expression: expression . ADD mul_exp
   65           | expression . SUB mul_exp

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    $default  reduce using rule 43 (sreturn)


State 73

   63 expression: mul_exp .
   67 mul_exp: mul_exp . MULT term
   68        | mul_exp . DIV term
   69        | mul_exp . MOD term

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 63 (expression)


State 74

   66 mul_exp: term .

    $default  reduce using rule 66 (mul_exp)


State 75

   70 term: var .

    $default  reduce using rule 70 (term)


State 76

   76 term: ident . L_PAREN expressions R_PAREN
   77     | ident . L_PAREN R_PAREN
   80 var: ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   81    | ident .

    L_SQUARE_BRACKET  shift, and go to state 81
    L_PAREN           shift, and go to state 106

    $default  reduce using rule 81 (var)


State 77

   72 term: number .

    $default  reduce using rule 72 (term)


State 78

    8 function: FUNCTION ident $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 8 (function)


State 79

   12 statements: statement SEMICOLON . statementsEnding

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 6

    $default  reduce using rule 14 (statementsEnding)

    statements        go to state 107
    statementsEnding  go to state 108
    statement         go to state 49
    svar              go to state 50
    sif               go to state 51
    swhile            go to state 52
    sdo               go to state 53
    sread             go to state 54
    swrite            go to state 55
    scontinue         go to state 56
    sreturn           go to state 57
    var               go to state 58
    ident             go to state 59


State 80

   28 svar: var ASSIGN . expression

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    expression  go to state 109
    mul_exp     go to state 73
    term        go to state 74
    var         go to state 75
    ident       go to state 76
    number      go to state 77


State 81

   80 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    expression  go to state 110
    mul_exp     go to state 73
    term        go to state 74
    var         go to state 75
    ident       go to state 76
    number      go to state 77


State 82

   30 sif: IF bool_expr THEN . $@3 statements ENDIF
   33    | IF bool_expr THEN . $@4 statements ELSE $@5 statements ENDIF

    IF        reduce using rule 29 ($@3)
    IF        [reduce using rule 31 ($@4)]
    WHILE     reduce using rule 29 ($@3)
    WHILE     [reduce using rule 31 ($@4)]
    DO        reduce using rule 29 ($@3)
    DO        [reduce using rule 31 ($@4)]
    CONTINUE  reduce using rule 29 ($@3)
    CONTINUE  [reduce using rule 31 ($@4)]
    READ      reduce using rule 29 ($@3)
    READ      [reduce using rule 31 ($@4)]
    WRITE     reduce using rule 29 ($@3)
    WRITE     [reduce using rule 31 ($@4)]
    RETURN    reduce using rule 29 ($@3)
    RETURN    [reduce using rule 31 ($@4)]
    IDENT     reduce using rule 29 ($@3)
    IDENT     [reduce using rule 31 ($@4)]
    $default  reduce using rule 29 ($@3)

    $@3  go to state 111
    $@4  go to state 112


State 83

   45 bool_exprs: OR . relation_and_expr bool_exprs

    NOT  shift, and go to state 61

    $default  reduce using rule 56 (nots)

    relation_and_expr  go to state 113
    relation_expr      go to state 64
    nots               go to state 65


State 84

   44 bool_expr: relation_and_expr bool_exprs .

    $default  reduce using rule 44 (bool_expr)


State 85

   48 relation_and_exprs: AND . relation_expr relation_and_exprs

    NOT  shift, and go to state 61

    $default  reduce using rule 56 (nots)

    relation_expr  go to state 114
    nots           go to state 65


State 86

   47 relation_and_expr: relation_expr relation_and_exprs .

    $default  reduce using rule 47 (relation_and_expr)


State 87

   52 relation_expr_ending: TRUE .

    $default  reduce using rule 52 (relation_expr_ending)


State 88

   53 relation_expr_ending: FALSE .

    $default  reduce using rule 53 (relation_expr_ending)


State 89

   54 relation_expr_ending: L_PAREN . bool_expr R_PAREN
   74 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 61
    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    SUB       [reduce using rule 56 (nots)]
    L_PAREN   [reduce using rule 56 (nots)]
    IDENT     [reduce using rule 56 (nots)]
    NUMBER    [reduce using rule 56 (nots)]
    $default  reduce using rule 56 (nots)

    bool_expr          go to state 115
    relation_and_expr  go to state 63
    relation_expr      go to state 64
    nots               go to state 65
    expression         go to state 100
    mul_exp            go to state 73
    term               go to state 74
    var                go to state 75
    ident              go to state 76
    number             go to state 77


State 90

   50 relation_expr: nots relation_expr_ending .

    $default  reduce using rule 50 (relation_expr)


State 91

   51 relation_expr_ending: expression . comp expression
   64 expression: expression . ADD mul_exp
   65           | expression . SUB mul_exp

    NEQ  shift, and go to state 116
    EQ   shift, and go to state 117
    GTE  shift, and go to state 118
    GT   shift, and go to state 119
    LTE  shift, and go to state 120
    LT   shift, and go to state 121
    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    comp  go to state 122


State 92

   35 swhile: WHILE bool_expr BEGINLOOP . $@6 statements ENDLOOP

    $default  reduce using rule 34 ($@6)

    $@6  go to state 123


State 93

   37 sdo: DO BEGINLOOP $@7 . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 6

    statements  go to state 124
    statement   go to state 49
    svar        go to state 50
    sif         go to state 51
    swhile      go to state 52
    sdo         go to state 53
    sread       go to state 54
    swrite      go to state 55
    scontinue   go to state 56
    sreturn     go to state 57
    var         go to state 58
    ident       go to state 59


State 94

   40 vars: COMMA . var vars

    IDENT  shift, and go to state 6

    var    go to state 125
    ident  go to state 59


State 95

   38 sread: READ var vars .

    $default  reduce using rule 38 (sread)


State 96

   41 swrite: WRITE var vars .

    $default  reduce using rule 41 (swrite)


State 97

   75 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    expression  go to state 126
    mul_exp     go to state 73
    term        go to state 74
    var         go to state 75
    ident       go to state 76
    number      go to state 77


State 98

   71 term: SUB var .

    $default  reduce using rule 71 (term)


State 99

   73 term: SUB number .

    $default  reduce using rule 73 (term)


State 100

   64 expression: expression . ADD mul_exp
   65           | expression . SUB mul_exp
   74 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 101
    SUB      shift, and go to state 102
    R_PAREN  shift, and go to state 127


State 101

   64 expression: expression ADD . mul_exp

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    mul_exp  go to state 128
    term     go to state 74
    var      go to state 75
    ident    go to state 76
    number   go to state 77


State 102

   65 expression: expression SUB . mul_exp

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    mul_exp  go to state 129
    term     go to state 74
    var      go to state 75
    ident    go to state 76
    number   go to state 77


State 103

   67 mul_exp: mul_exp MULT . term

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    term    go to state 130
    var     go to state 75
    ident   go to state 76
    number  go to state 77


State 104

   68 mul_exp: mul_exp DIV . term

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    term    go to state 131
    var     go to state 75
    ident   go to state 76
    number  go to state 77


State 105

   69 mul_exp: mul_exp MOD . term

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    term    go to state 132
    var     go to state 75
    ident   go to state 76
    number  go to state 77


State 106

   76 term: ident L_PAREN . expressions R_PAREN
   77     | ident L_PAREN . R_PAREN

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    R_PAREN  shift, and go to state 133
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    expression   go to state 134
    mul_exp      go to state 73
    term         go to state 74
    expressions  go to state 135
    var          go to state 75
    ident        go to state 76
    number       go to state 77


State 107

   13 statementsEnding: statements .

    $default  reduce using rule 13 (statementsEnding)


State 108

   12 statements: statement SEMICOLON statementsEnding .

    $default  reduce using rule 12 (statements)


State 109

   28 svar: var ASSIGN expression .
   64 expression: expression . ADD mul_exp
   65           | expression . SUB mul_exp

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    $default  reduce using rule 28 (svar)


State 110

   64 expression: expression . ADD mul_exp
   65           | expression . SUB mul_exp
   80 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    ADD               shift, and go to state 101
    SUB               shift, and go to state 102
    R_SQUARE_BRACKET  shift, and go to state 136


State 111

   30 sif: IF bool_expr THEN $@3 . statements ENDIF

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 6

    statements  go to state 137
    statement   go to state 49
    svar        go to state 50
    sif         go to state 51
    swhile      go to state 52
    sdo         go to state 53
    sread       go to state 54
    swrite      go to state 55
    scontinue   go to state 56
    sreturn     go to state 57
    var         go to state 58
    ident       go to state 59


State 112

   33 sif: IF bool_expr THEN $@4 . statements ELSE $@5 statements ENDIF

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 6

    statements  go to state 138
    statement   go to state 49
    svar        go to state 50
    sif         go to state 51
    swhile      go to state 52
    sdo         go to state 53
    sread       go to state 54
    swrite      go to state 55
    scontinue   go to state 56
    sreturn     go to state 57
    var         go to state 58
    ident       go to state 59


State 113

   45 bool_exprs: OR relation_and_expr . bool_exprs

    OR  shift, and go to state 83

    $default  reduce using rule 46 (bool_exprs)

    bool_exprs  go to state 139


State 114

   48 relation_and_exprs: AND relation_expr . relation_and_exprs

    AND  shift, and go to state 85

    $default  reduce using rule 49 (relation_and_exprs)

    relation_and_exprs  go to state 140


State 115

   54 relation_expr_ending: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 141


State 116

   58 comp: NEQ .

    $default  reduce using rule 58 (comp)


State 117

   57 comp: EQ .

    $default  reduce using rule 57 (comp)


State 118

   62 comp: GTE .

    $default  reduce using rule 62 (comp)


State 119

   60 comp: GT .

    $default  reduce using rule 60 (comp)


State 120

   61 comp: LTE .

    $default  reduce using rule 61 (comp)


State 121

   59 comp: LT .

    $default  reduce using rule 59 (comp)


State 122

   51 relation_expr_ending: expression comp . expression

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    expression  go to state 142
    mul_exp     go to state 73
    term        go to state 74
    var         go to state 75
    ident       go to state 76
    number      go to state 77


State 123

   35 swhile: WHILE bool_expr BEGINLOOP $@6 . statements ENDLOOP

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 6

    statements  go to state 143
    statement   go to state 49
    svar        go to state 50
    sif         go to state 51
    swhile      go to state 52
    sdo         go to state 53
    sread       go to state 54
    swrite      go to state 55
    scontinue   go to state 56
    sreturn     go to state 57
    var         go to state 58
    ident       go to state 59


State 124

   37 sdo: DO BEGINLOOP $@7 statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 144


State 125

   40 vars: COMMA var . vars

    COMMA  shift, and go to state 94

    $default  reduce using rule 39 (vars)

    vars  go to state 145


State 126

   64 expression: expression . ADD mul_exp
   65           | expression . SUB mul_exp
   75 term: SUB L_PAREN expression . R_PAREN

    ADD      shift, and go to state 101
    SUB      shift, and go to state 102
    R_PAREN  shift, and go to state 146


State 127

   74 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 74 (term)


State 128

   64 expression: expression ADD mul_exp .
   67 mul_exp: mul_exp . MULT term
   68        | mul_exp . DIV term
   69        | mul_exp . MOD term

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 64 (expression)


State 129

   65 expression: expression SUB mul_exp .
   67 mul_exp: mul_exp . MULT term
   68        | mul_exp . DIV term
   69        | mul_exp . MOD term

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 65 (expression)


State 130

   67 mul_exp: mul_exp MULT term .

    $default  reduce using rule 67 (mul_exp)


State 131

   68 mul_exp: mul_exp DIV term .

    $default  reduce using rule 68 (mul_exp)


State 132

   69 mul_exp: mul_exp MOD term .

    $default  reduce using rule 69 (mul_exp)


State 133

   77 term: ident L_PAREN R_PAREN .

    $default  reduce using rule 77 (term)


State 134

   64 expression: expression . ADD mul_exp
   65           | expression . SUB mul_exp
   79 expressions: expression .

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    $default  reduce using rule 79 (expressions)


State 135

   76 term: ident L_PAREN expressions . R_PAREN
   78 expressions: expressions . COMMA expression

    COMMA    shift, and go to state 147
    R_PAREN  shift, and go to state 148


State 136

   80 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 80 (var)


State 137

   30 sif: IF bool_expr THEN $@3 statements . ENDIF

    ENDIF  shift, and go to state 149


State 138

   33 sif: IF bool_expr THEN $@4 statements . ELSE $@5 statements ENDIF

    ELSE  shift, and go to state 150


State 139

   45 bool_exprs: OR relation_and_expr bool_exprs .

    $default  reduce using rule 45 (bool_exprs)


State 140

   48 relation_and_exprs: AND relation_expr relation_and_exprs .

    $default  reduce using rule 48 (relation_and_exprs)


State 141

   54 relation_expr_ending: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 54 (relation_expr_ending)


State 142

   51 relation_expr_ending: expression comp expression .
   64 expression: expression . ADD mul_exp
   65           | expression . SUB mul_exp

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    $default  reduce using rule 51 (relation_expr_ending)


State 143

   35 swhile: WHILE bool_expr BEGINLOOP $@6 statements . ENDLOOP

    ENDLOOP  shift, and go to state 151


State 144

   37 sdo: DO BEGINLOOP $@7 statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 152


State 145

   40 vars: COMMA var vars .

    $default  reduce using rule 40 (vars)


State 146

   75 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 75 (term)


State 147

   78 expressions: expressions COMMA . expression

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 33

    expression  go to state 153
    mul_exp     go to state 73
    term        go to state 74
    var         go to state 75
    ident       go to state 76
    number      go to state 77


State 148

   76 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 76 (term)


State 149

   30 sif: IF bool_expr THEN $@3 statements ENDIF .

    $default  reduce using rule 30 (sif)


State 150

   33 sif: IF bool_expr THEN $@4 statements ELSE . $@5 statements ENDIF

    $default  reduce using rule 32 ($@5)

    $@5  go to state 154


State 151

   35 swhile: WHILE bool_expr BEGINLOOP $@6 statements ENDLOOP .

    $default  reduce using rule 35 (swhile)


State 152

   37 sdo: DO BEGINLOOP $@7 statements ENDLOOP WHILE . bool_expr

    NOT  shift, and go to state 61

    $default  reduce using rule 56 (nots)

    bool_expr          go to state 155
    relation_and_expr  go to state 63
    relation_expr      go to state 64
    nots               go to state 65


State 153

   64 expression: expression . ADD mul_exp
   65           | expression . SUB mul_exp
   78 expressions: expressions COMMA expression .

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    $default  reduce using rule 78 (expressions)


State 154

   33 sif: IF bool_expr THEN $@4 statements ELSE $@5 . statements ENDIF

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 6

    statements  go to state 156
    statement   go to state 49
    svar        go to state 50
    sif         go to state 51
    swhile      go to state 52
    sdo         go to state 53
    sread       go to state 54
    swrite      go to state 55
    scontinue   go to state 56
    sreturn     go to state 57
    var         go to state 58
    ident       go to state 59


State 155

   37 sdo: DO BEGINLOOP $@7 statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 37 (sdo)


State 156

   33 sif: IF bool_expr THEN $@4 statements ELSE $@5 statements . ENDIF

    ENDIF  shift, and go to state 157


State 157

   33 sif: IF bool_expr THEN $@4 statements ELSE $@5 statements ENDIF .

    $default  reduce using rule 33 (sif)
